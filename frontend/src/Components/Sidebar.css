.sidebar {
    display:flex;
    flex-direction: column;
    position: fixed;
    top: 0;
    left: 0;
    width: max(475px, 25%);
    height: 100%;
    background-color: #fff;
    transition: width 0.3s;
    
    z-index: 99999999999999;
  }
  
  .sidebar.closed {
    overflow: hidden;
    min-width:unset;
    width: 115px;
  }
  
  .sidebar .toggle-button {
    background-color: #444;
    border: none;
    color: #fff;
    padding: 10px;
    cursor: pointer;
    width: 100%;
  }
  
  .sidebar .sidebar-content {
    display:flex;
    width:100%;
    flex-direction: row;

  }
  .viewSimulationHeader{
    flex: 0 0 115px;
    display: flex;
    flex-direction: column;
    width:115px;
    height: 100vh;
    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 2px 6px 2px rgba(60, 64, 67, 0.15);
  }
    .material-symbols-outlined {
    font-variation-settings:
    'FILL' 0,
    'wght' 400,
    'GRAD' 0,
    'opsz' 24
    }
  .viewSimulationHeaderButton{
    display: flex;
    flex-direction: column;
    align-items: center; /* Vertical centering */
    justify-content: center; /* Horizontal centering */
    text-decoration: none;
    font-size: 1.25em;
    font-weight: 500;
    color: #5f6368;
    background-color:#fff;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width:100%;
    height:75px;
    box-sizing: border-box;
    padding: 50px 0;
  }
  .sidebarIcon{
    font-size: 2em;
    color: #5f6368;
  }
  .simulationSearchForm{
    display: flex;
    flex-direction: row;
    margin: 0px 0px 0 0px; /* Space around the input */
    flex-grow: 1; /* Take up the remaining space */

  }  
  .searchInput {
    flex: 1; /* Take up all available space */
    padding: 6px 10px; /* Space inside the input */
    border: 1px solid #333; /* Light grey border */
    border-radius: 20px 0 0 20px; /* Rounded corners */
    font-size: 16px; /* Font size */
    transition: border-color 0.3s; /* Smooth transition for focus */
    width:70%;
  }
  .searchButton{
    border-radius: 0 20px 20px 0; /* Rounded corners */
    width: max-content;
    height: 50px;
  }
  .cardList{
    overflow-y: scroll; /* Vertical scrolling */
    flex-grow: 1;
    overflow-x: hidden;
    text-wrap: nowrap;
    height:100vh;
    padding:19px;
    padding-bottom: 40px;
  }
.sidebar.closed .cardList{
    width: 0;
    overflow:hidden;
    
    
  }
  
  .card{
    padding: 20px 0px 10px 0px;
    display: flex;
    flex-direction: row;
    border-bottom: 1px solid #dadce0;
    margin: 0 10px;
  }
  .cardButton {
    padding: 7px 0px 7px 10px;
    font-size: 1em;
    font-weight: 700;
    color: #1a73e8;
    background-color: #fff;
    border: 1px solid #1a73e8;
    border-radius: 17px;
    cursor: pointer;
    margin: 6px 0;
    transition: background-color 0.3s ease;
    text-wrap:wrap;
  }
  
  .cardButton:hover {
    box-shadow: 0 1px 2px rgba(60,64,67,0.3),0 2px 6px 2px rgba(60,64,67,0.15);
  }

  .cardHeader{
    display:flex;
    flex-direction: column;
    width: 65%;
    padding-right:10px;
      flex: 1; /* Allows the child to grow, but not exceed the parent */
  }
  .cardButtons{
    display:flex;
    flex-direction: column;
    width: 35%;
  }

  .simName{
    font-size: 1.5em;
    font-weight: bold;
    color: #333;
    white-space: nowrap; /* Prevent text from wrapping */
    overflow: hidden; /* Hide overflowed content */
    text-overflow: ellipsis; /* Show ellipsis for overflowed text */
  }
  .discreteButtonContainer{
    position:absolute;
    bottom:10px;
    left: 10px;
  }
  @media (max-width: 768px) {
    .sidebar.closed{
      width:0px;
      overflow: visible;
    }
    .sidebar{
      width:100%;
      overflow: visible;
    }
    .sidebar.closed .cardList{
      padding:0px;
    }
    .discreteButtonContainer{
      width:fit-content;
      height:fit-content;
      bottom:unset;
      left: unset;
      top:-30px;
      right: 0px;
    }
    .viewSimulationHeader{
      flex-direction:row;
      width: 100vw;
      height: 100px;
      position: absolute;
      bottom:0px;
      left:0px;
    }
    .cardList{
      height: calc(100vh - 100px);
    }
  }